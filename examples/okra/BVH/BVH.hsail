version 0:20140528:$full:$large;
extension "amd:gcn";
extension "IMAGE";

decl prog function &abort()();

prog kernel &__OpenCL_bvh_search_kernel(
	kernarg_u64 %root_parm,
	kernarg_u64 %search_point,
	kernarg_u64 %found_nodes_parm)
{
	pragma  "AMD RTI", "ARGSTART:__OpenCL_bvh_search_kernel";
	pragma  "AMD RTI", "version:3:1:104";
	pragma  "AMD RTI", "device:generic";
	pragma  "AMD RTI", "uniqueid:1024";
	pragma  "AMD RTI", "function:1:0";
	pragma  "AMD RTI", "memory:64bitABI";
	pragma  "AMD RTI", "uavid:8";
	pragma  "AMD RTI", "privateid:8";
	pragma  "AMD RTI", "ARGEND:__OpenCL_bvh_search_kernel";

@__OpenCL_bvh_search_kernel_entry:
	// BB#0:                                // %entry
	workitemabsid_u32	$s0, 0;
	cvt_s64_s32	$d2, $s0;
	ld_kernarg_align(8)_width(all)_u64	$d0, [%search_point];
	mad_u64	$d0, $d2, 24, $d0;
	ld_global_f64	$d1, [$d0];
	ld_global_f64	$d0, [$d0+8];
	cvt_ftz_f32_f64	$s0, $d0;
	cvt_ftz_f64_f32	$d0, $s0;
	cvt_ftz_f32_f64	$s0, $d1;
	cvt_ftz_f64_f32	$d1, $s0;
	ld_kernarg_align(8)_width(all)_u64	$d4, [%root_parm];
	ld_kernarg_align(8)_width(all)_u64	$d3, [%found_nodes_parm];
	shl_u64	$d2, $d2, 3;
	add_u64	$d2, $d3, $d2;
	mov_b64	$d3, 0;

@BB0_1:
	// %do.body
	mov_b1	$c0, 0;
	ld_global_u64	$d6, [$d4+56];
	ld_global_u64	$d5, [$d4+48];
	ld_global_f64	$d7, [$d5];
	cmp_gtu_b1_f64	$c2, $d7, $d1;
	mov_b1	$c1, $c0;
	cbr_b1	$c2, @BB0_5;
	// BB#2:                                // %land.lhs.true.i
	ld_global_f64	$d7, [$d5+16];
	cmp_gtu_b1_f64	$c2, $d7, $d0;
	mov_b1	$c1, $c0;
	cbr_b1	$c2, @BB0_5;
	// BB#3:                                // %land.lhs.true2.i
	ld_global_f64	$d7, [$d5+8];
	cmp_ltu_b1_f64	$c2, $d7, $d1;
	mov_b1	$c1, $c0;
	cbr_b1	$c2, @BB0_5;
	// BB#4:                                // %land.rhs.i
	ld_global_f64	$d7, [$d5+24];
	cmp_ge_b1_f64	$c1, $d7, $d0;

@BB0_5:
	// %doesPointLieInsideBVH.exit
	ld_global_f64	$d7, [$d6];
	cmp_gtu_b1_f64	$c2, $d7, $d1;
	cbr_b1	$c2, @BB0_9;
	// BB#6:                                // %land.lhs.true.i28
	ld_global_f64	$d7, [$d6+16];
	cmp_gtu_b1_f64	$c2, $d7, $d0;
	cbr_b1	$c2, @BB0_9;
	// BB#7:                                // %land.lhs.true2.i31
	ld_global_f64	$d7, [$d6+8];
	cmp_ltu_b1_f64	$c2, $d7, $d1;
	cbr_b1	$c2, @BB0_9;
	// BB#8:                                // %land.rhs.i34
	ld_global_f64	$d7, [$d6+24];
	cmp_ge_b1_f64	$c0, $d7, $d0;

@BB0_9:
	// %doesPointLieInsideBVH.exit35
	cmp_ne_b1_b1	$c1, $c1, 1;
	cbr_b1	$c1, @BB0_12;
	// BB#10:                                // %land.lhs.true
	ld_global_u64	$d7, [$d5+80];
	cmp_eq_b1_s64	$c2, $d7, 0;
	cbr_b1	$c2, @BB0_12;
	// BB#11:                                // %if.then
	ld_global_u64	$d7, [$d5+72];
	ld_global_u64	$d7, [$d7+64];
	st_global_u64	$d7, [$d2];

@BB0_12:
	// %if.end
	cmp_ne_b1_b1	$c0, $c0, 1;
	cbr_b1	$c0, @BB0_15;
	// BB#13:                                // %land.lhs.true28
	ld_global_u64	$d7, [$d6+80];
	cmp_eq_b1_s64	$c2, $d7, 0;
	cbr_b1	$c2, @BB0_15;
	// BB#14:                                // %if.then32
	ld_global_u64	$d7, [$d6+72];
	ld_global_u64	$d7, [$d7+64];
	st_global_u64	$d7, [$d2];

@BB0_15:
	// %if.end37
	cbr_b1	$c1, @BB0_16;
	// BB#17:                                // %land.rhs
	ld_global_u64	$d7, [$d4+48];
	ld_global_u64	$d7, [$d7+80];
	cmp_eq_b1_s64	$c1, $d7, 0;
	br	@BB0_18;

@BB0_16:
	mov_b1	$c1, 0;

@BB0_18:
	// %land.end
	mov_b64	$d7, $d3;
	cbr_b1	$c0, @BB0_20;
	// BB#19:                                // %land.rhs46
	ld_global_u64	$d4, [$d4+56];
	ld_global_u64	$d4, [$d4+80];
	cmp_ne_b1_s64	$c0, $d4, 0;
	cmov_b64	$d7, $c0, 0, $d6;

@BB0_20:
	// %land.end51
	cmov_b64	$d4, $c1, $d5, $d7;
	cmp_ne_b1_s64	$c0, $d4, 0;
	cbr_b1	$c0, @BB0_1;
	// BB#21:                                // %do.end
	ret;
};
