
In this application, the kernel searches for set of keys in the binary search 
tree created by the host. To run the application so the following:

1. Install HSA stack (runtime, compilers, CLOC, drivers) as given in the HSA Foundation web site GITHUB
2. Set environment variables

export HSA_RUNTIME_PATH=/home/cas/Prakash/GitObsedian/HSA-Runtime-AMD
export HSA_KMT_PATH=/home/cas/Prakash/GitObsedian/HSA-Drivers-Linux-AMD/kfd-0.8/libhsakmt/
export HSA_OKRA_PATH=/home/cas/Prakash/GitObsedian/Okra-Interface-to-HSA-Device/okra/
export HSA_LLVM_PATH=/home/cas/Prakash/GitObsedian/HSAIL-HLC-Development/bin
export LD_LIBRARY_PATH=$HSA_RUNTIME_PATH/lib/x86_64:$HSA_KMT_PATH/lnx64a:$HSA_OKRA_PATH/dist/bin
export OKRA_DISABLE_FIX_HSAIL=1

3. Set these macros to the value you want. Number of nodes refer to the nodes
in the tree, search key ratio is the percentage of nodes you want to search.

#define   NUMBER_OF_NODES         1 * 1024 * 1024
#define   SEARCH_KEY_NODE_RATIO   (0.25)
#define   DEFAULT_LOCAL_SIZE      256

4. Run by giving ./SVMBinaryTreeSearch

It will report "Passed" if everything is passed.
